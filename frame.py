# Form implementation generated from reading ui file 'FRAME.ui'
#
# Created by: PyQt6 UI code generator 6.1.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets 
import DragonClass, PlayerClass, sys
from random import randint
from time import sleep
dragon = DragonClass.Dragon("Ancient Dragon", 1500, 30, 30, 60, 50)

class w_choice(QtWidgets.QWidget):
    def __init__(self):
        super().__init__()
        self.setStyleSheet("background: #000000;")
        self.setWindowTitle("Make your Choice")
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(31, 471, 521, 30))
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel("Chose the sacred weapon that will aid you on your quest!")
        self.horizontalLayout.addWidget(self.label)
        self.caballier_Button = QtWidgets.QPushButton("Caballier")
        self.horizontalLayout.addWidget(self.caballier_Button)
        self.lancer_Button = QtWidgets.QPushButton("Lancer")
        self.horizontalLayout.addWidget(self.lancer_Button)
        self.archer_Button = QtWidgets.QPushButton("Archer")
        self.horizontalLayout.addWidget(self.archer_Button)
        self.widget.show()
'''
    def choice(self):
            print("Bla")
            choice = 0
            if self.caballier_Button.isChecked():
                choice = 1
            elif self.lancer_Button.isChecked():
                choice = 2
            elif self.archer_Button.isChecked():
                choice = 3
            if choice != 0:
                return choice
            else:
                sleep(1)

    def choice2(self):
        print("ble")
        while choice == 0:
            if self.caballier_Button.isChecked():
                choice = 1
            elif self.lancer_Button.isChecked():
                choice = 2
            elif self.archer_Button.isChecked():
                choice = 3
        return choice
'''
class MainWindow(QtWidgets.QMainWindow):
    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent)
        self.setWindowTitle("MainWindow")
        self.setStyleSheet("background: #000000;")
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(31, 471, 521, 30))
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.class_Button = QtWidgets.QPushButton(self.widget)
        self.attack_Button = QtWidgets.QPushButton(self.widget)
        self.attack_Button.setObjectName("attack_Button")
        self.attack_Button.setStyleSheet("background: #999999;")
        self.horizontalLayout.addWidget(self.attack_Button)
        self.defence_Button = QtWidgets.QPushButton(self.widget)
        self.defence_Button.setObjectName("defence_Button")
        self.horizontalLayout.addWidget(self.defence_Button)
        self.defence_Button.setStyleSheet("background: #999999;")
        self.class_Button.setObjectName("class_Button")
        self.class_Button.setStyleSheet("background: #999999;")
        self.horizontalLayout.addWidget(self.class_Button)
        self.widget1 = QtWidgets.QWidget(self.centralwidget)
        self.widget1.setGeometry(QtCore.QRect(32, 43, 521, 400))
        self.widget1.setObjectName("widget1")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.widget1)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.player_Status = QtWidgets.QTextBrowser(self.widget1)
        self.player_Status.setObjectName("player_Status")
        self.player_Status.setStyleSheet("color: white; background-color: black;")
        self.verticalLayout.addWidget(self.player_Status)
        self.dragon_Status = QtWidgets.QTextBrowser(self.widget1)
        self.dragon_Status.setStyleSheet("color: white; background-color: black;")
        self.dragon_Status.setObjectName("dragon_Status")
        self.verticalLayout.addWidget(self.dragon_Status)
        self.gridLayout_3.addLayout(self.verticalLayout, 0, 0, 1, 1)
        self.battle_Log = QtWidgets.QTextBrowser(self.widget1)
        self.battle_Log.setAutoFillBackground(False)
        self.battle_Log.setObjectName("battle_Log")
        self.battle_Log.setStyleSheet("color: white; background: url(dragon.png);")
        self.gridLayout_3.addWidget(self.battle_Log, 0, 1, 1, 1)
        self.setCentralWidget(self.centralwidget)

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Fight The Dragon"))
        self.class_Button.setText(_translate("MainWindow", "CLASS"))
        self.attack_Button.setText(_translate("MainWindow", "ATTACK"))
        self.defence_Button.setText(_translate("MainWindow", "DEFENCE"))

    def status(self):
        player_status = PlayerClass.Player.Status(player)
        self.player_Status.setText(player_status)
        dragon_status = DragonClass.Dragon.Status(dragon)
        self.dragon_Status.setText(dragon_status)

    def battle_log(self, newlog):
        log = "\n" + newlog
        self.battle_Log.append(log)
        separator = "=" * 20
        self.battle_Log.append(separator)

app = QtWidgets.QApplication(sys.argv)
mainWindow = MainWindow()
mainWindow.show()

def juego():
    turn = 1
    msg = w_choice()
    '''
    choice =  w_choice.choice(msg)
    
    player, newlog = PlayerClass.Player.Choice(choice)
    MainWindow.battle_log(mainWindow, newlog)
    while dragon.DragonLife>0 and player.life>0:
        print("*" * 30) #PLAYER TURN
        PlayerClass.Player.TimerEffects(player, dragon)
        ()
        if player.aCompanion ==1: #If player has a companion. Companion Status.
            print("*" * 30)
            PlayerClass.Player.Status(bear)
        print("*" * 30)
        PlayerClass.Player.Turn(player, dragon)
        if player.aCompanion ==1: #If player has a companion. Companion Attack. 
            input("Press Enter to continue...")
            print("*" * 30)
            PlayerClass.Player.Attack(bear, dragon)
        input("Press Enter to continue...")

        print("*" * 30) #DRAGON TURN
        DragonClass.Dragon.TimerEffects(dragon)
        DragonClass.Dragon.Status(dragon)
        for i in dragon.lesserDragon: #If Dragon has a minnion. Minnion Status.
            DragonClass.Dragon.Status(i)
        input("Press Enter to continue...")
        print("*" * 30)
        DragonClass.Dragon.Turn(dragon, DObjetive(player))
        for i in dragon.lesserDragon: #If Dragon has a minnion. Minnion Attack.
            DragonClass.Dragon.Attack(i, DObjetive(player))
        turn +=1
    '''
if __name__ == "__main__":
    juego()
    sys.exit(app.exec())
